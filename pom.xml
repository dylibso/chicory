<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.dylibso.chicory</groupId>
  <artifactId>chicory</artifactId>
  <version>999-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Chicory</name>
  <description>Native JVM WebAssembly runtime</description>
  <url>https://github.com/dylibso/chicory</url>

  <organization>
    <name>Dylibso, Inc.</name>
    <url>https://dylibso.com</url>
  </organization>

  <licenses>
    <license>
      <name>Apache-2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>The Chicory Authors</name>
      <email>oss@dylibso.com</email>
      <organization>Dylibso, Inc.</organization>
      <organizationUrl>https://dylibso.com</organizationUrl>
    </developer>
  </developers>

  <modules>
    <module>aot</module>
    <module>aot-tests</module>
    <module>bom</module>
    <module>cli</module>
    <module>docs-lib</module>
    <module>function-annotations</module>
    <module>function-processor</module>
    <module>fuzz</module>
    <module>jmh</module>
    <module>log</module>
    <module>runtime</module>
    <module>runtime-tests</module>
    <module>test-gen-plugin</module>
    <module>wabt</module>
    <module>wasi</module>
    <module>wasi-test-gen-plugin</module>
    <module>wasm</module>
    <module>wasm-corpus</module>
  </modules>

  <scm>
    <connection>scm:git:git://github.com/dylibso/chicory.git</connection>
    <developerConnection>scm:git:ssh://github.com:dylibso/chicory.git</developerConnection>
    <url>http://github.com/dylibso/chicory/tree/main</url>
  </scm>

  <issueManagement>
    <system>Github</system>
    <url>https://github.com/dylibso/chicory/issues</url>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <name>Central Repository OSSRH</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <maven.compiler.release>11</maven.compiler.release>
    <maven.compiler.failOnWarning>true</maven.compiler.failOnWarning>
    <maven.dependency.failOnWarning>true</maven.dependency.failOnWarning>

    <approvaltests.version>24.7.0</approvaltests.version>
    <asm.version>9.7</asm.version>
    <commons-io.version>2.17.0</commons-io.version>
    <commons-lang.version>3.17.0</commons-lang.version>
    <jackson.version>2.18.0</jackson.version>
    <javaparser.version>3.26.2</javaparser.version>
    <zip4j.version>2.11.5</zip4j.version>
    <jmh.version>1.37</jmh.version>
    <junit.version>5.11.1</junit.version>
    <maven-plugin-annotations.version>3.15.0</maven-plugin-annotations.version>
    <maven-plugin-api.version>3.9.9</maven-plugin-api.version>
    <picocli.version>4.7.6</picocli.version>

    <build-helper-maven-plugin.version>3.5.0</build-helper-maven-plugin.version>
    <checkstyle.version>10.18.2</checkstyle.version>
    <error-prone.version>2.33.0</error-prone.version>
    <flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
    <maven-checkstyle-plugin.version>3.5.0</maven-checkstyle-plugin.version>
    <maven-clean-plugin.version>3.4.0</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
    <maven-dependency-plugin.version>3.8.0</maven-dependency-plugin.version>
    <maven-deploy-plugin.version>3.1.3</maven-deploy-plugin.version>
    <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
    <maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>
    <maven-gpg-plugin.version>3.2.7</maven-gpg-plugin.version>
    <maven-install-plugin.version>3.1.3</maven-install-plugin.version>
    <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>3.10.1</maven-javadoc-plugin.version>
    <maven-plugin-plugin.version>3.15.0</maven-plugin-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven-shade-plugin.version>3.6.0</maven-shade-plugin.version>
    <maven-site-plugin.version>3.20.0</maven-site-plugin.version>
    <maven-source-plugin.version>3.3.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>3.5.0</maven-surefire-plugin.version>
    <nexus-staging-maven-plugin.version>1.7.0</nexus-staging-maven-plugin.version>
    <spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>
    <templating-maven-plugin.version>3.0.0</templating-maven-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>

      <!-- Used by AOT compiler -->
      <dependency>
        <groupId>org.ow2.asm</groupId>
        <artifactId>asm-bom</artifactId>
        <version>${asm.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Chicory project modules -->
      <dependency>
        <groupId>com.dylibso.chicory</groupId>
        <artifactId>aot</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.dylibso.chicory</groupId>
        <artifactId>cli</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.dylibso.chicory</groupId>
        <artifactId>function-annotations</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.dylibso.chicory</groupId>
        <artifactId>function-processor</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.dylibso.chicory</groupId>
        <artifactId>log</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.dylibso.chicory</groupId>
        <artifactId>runtime</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.dylibso.chicory</groupId>
        <artifactId>wabt</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.dylibso.chicory</groupId>
        <artifactId>wasi</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.dylibso.chicory</groupId>
        <artifactId>wasm</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.dylibso.chicory</groupId>
        <artifactId>wasm-corpus</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- Error Prone -->
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>${error-prone.version}</version>
      </dependency>

      <!-- Use latest Guava -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>33.3.1-jre</version>
      </dependency>

      <!-- Used for WASI tests -->
      <dependency>
        <groupId>com.google.jimfs</groupId>
        <artifactId>jimfs</artifactId>
        <version>1.3.0</version>
      </dependency>

      <!-- Used in the infrastructure of Fuzz tests -->
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>

      <!-- Used to build a CLI -->
      <dependency>
        <groupId>info.picocli</groupId>
        <artifactId>picocli</artifactId>
        <version>${picocli.version}</version>
      </dependency>

      <!-- Used in the infrastructure of Fuzz tests -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang.version}</version>
      </dependency>

      <!-- JMH tests -->
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-core</artifactId>
        <version>${jmh.version}</version>
      </dependency>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-generator-annprocess</artifactId>
        <version>${jmh.version}</version>
      </dependency>

      <!-- Unit tests -->
      <dependency>
        <groupId>com.approvaltests</groupId>
        <artifactId>approvaltests</artifactId>
        <version>${approvaltests.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- Used for annotation processor tests -->
      <dependency>
        <groupId>com.google.testing.compile</groupId>
        <artifactId>compile-testing</artifactId>
        <version>0.21.0</version>
        <scope>test</scope>
      </dependency>

      <!-- Unit tests -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven-checkstyle-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>${maven-plugin-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven-shade-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${flatten-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>templating-maven-plugin</artifactId>
          <version>${templating-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>${nexus-staging-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <configuration>
          <formats>
            <format>
              <includes>
                <include>*.md</include>
                <include>.gitignore</include>
              </includes>
              <trimTrailingWhitespace/>
              <endWithNewline/>
              <indent>
                <spaces>true</spaces>
                <spacesPerTab>2</spacesPerTab>
              </indent>
            </format>
          </formats>
          <java>
            <includes>
              <include>**/src/main/java/**/*.java</include>
              <include>**/src/test/java/**/*.java</include>
            </includes>
            <googleJavaFormat>
              <version>1.18.1</version>
              <style>AOSP</style>
              <reflowLongStrings>true</reflowLongStrings>
              <formatJavadoc>false</formatJavadoc>
            </googleJavaFormat>
            <importOrder/>
            <replaceRegex>
              <name>Remove wildcard imports</name>
              <searchRegex>import\s+(?:static\s+)?[^\*\s]+\*;(\r\n|\r|\n)</searchRegex>
              <replacement>$1</replacement>
            </replaceRegex>
            <removeUnusedImports/>
          </java>
          <pom>
            <includes>
              <include>**/pom.xml</include>
            </includes>
            <excludes>
              <exclude>**/target/**/*.xml</exclude>
            </excludes>
            <sortPom>
              <expandEmptyElements>false</expandEmptyElements>
              <sortModules>true</sortModules>
              <sortDependencies>scope,groupId,artifactId</sortDependencies>
              <sortDependencyExclusions>groupId,artifactId</sortDependencyExclusions>
              <sortPlugins>groupId,artifactId</sortPlugins>
            </sortPom>
          </pom>
        </configuration>
        <executions>
          <execution>
            <id>format</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <failOnViolation>true</failOnViolation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <excludeGeneratedSources>true</excludeGeneratedSources>
          <checkstyleRules>
            <module name="Checker">
              <module name="FileTabCharacter">
                <property name="fileExtensions" value="java,xml"/>
              </module>
              <module name="SuppressWarningsFilter"/>
              <module name="TreeWalker">
                <module name="AnnotationUseStyle"/>
                <module name="ArrayTypeStyle"/>
                <module name="AtclauseOrder"/>
                <module name="AvoidDoubleBraceInitialization"/>
                <module name="AvoidNoArgumentSuperConstructorCall"/>
                <module name="ConstructorsDeclarationGrouping"/>
                <module name="DefaultComesLast"/>
                <module name="EmptyBlock">
                  <property name="option" value="text"/>
                </module>
                <module name="EmptyCatchBlock"/>
                <module name="ExplicitInitialization"/>
                <module name="FallThrough"/>
                <module name="FinalClass"/>
                <module name="HideUtilityClassConstructor"/>
                <module name="IllegalCatch">
                  <property name="illegalClassNames" value="Exception"/>
                </module>
                <module name="InnerAssignment"/>
                <module name="InvalidJavadocPosition"/>
                <module name="JavadocBlockTagLocation"/>
                <module name="JavadocContentLocation"/>
                <module name="JavadocMissingLeadingAsterisk"/>
                <module name="JavadocMissingWhitespaceAfterAsterisk"/>
                <module name="JavadocTagContinuationIndentation"/>
                <module name="ModifiedControlVariable"/>
                <module name="ModifierOrder"/>
                <module name="MultipleVariableDeclarations"/>
                <module name="MutableException"/>
                <module name="NeedBraces"/>
                <module name="NoClone"/>
                <module name="NoFinalizer"/>
                <module name="NonEmptyAtclauseDescription"/>
                <module name="OneStatementPerLine"/>
                <module name="OneTopLevelClass"/>
                <module name="OverloadMethodsDeclarationOrder"/>
                <module name="PackageDeclaration"/>
                <module name="RequireEmptyLineBeforeBlockTagGroup"/>
                <module name="SimplifyBooleanExpression"/>
                <module name="SimplifyBooleanReturn"/>
                <module name="SingleLineJavadoc"/>
                <module name="StringLiteralEquality"/>
                <module name="SuppressWarningsHolder"/>
                <module name="TypeName"/>
                <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
                <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
                <module name="UnnecessarySemicolonInEnumeration"/>
                <module name="UnnecessarySemicolonInTryWithResources"/>
                <module name="UnusedLocalVariable"/>
                <module name="UpperEll"/>
              </module>
            </module>
          </checkstyleRules>
        </configuration>
        <executions>
          <execution>
            <id>checkstyle</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <release>${maven.compiler.release}</release>
          <parameters>true</parameters>
          <failOnWarning>${maven.compiler.failOnWarning}</failOnWarning>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
          <compilerArgs>
            <arg>-XDcompilePolicy=simple</arg>
            <arg>-Xplugin:ErrorProne \
              -Xep:MissingCasesInEnumSwitch:OFF \
              -Xep:MissingOverride:ERROR \
              -Xep:MissingSummary:OFF \
              -Xep:NonOverridingEquals:OFF \
              -Xep:OperatorPrecedence:OFF \
              -Xep:ReferenceEquality:OFF \
              -Xep:UnnecessaryParentheses:OFF \
              -XepExcludedPaths:.*/target/generated-(|test-)sources/.*</arg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>com.google.errorprone</groupId>
              <artifactId>error_prone_core</artifactId>
              <version>${error-prone.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <failOnWarning>${maven.dependency.failOnWarning}</failOnWarning>
          <ignoreUnusedRuntime>true</ignoreUnusedRuntime>
          <ignoredUnusedDeclaredDependencies>
            <dependency>com.dylibso.chicory:wasm-corpus</dependency>
            <dependency>org.junit.jupiter:junit-jupiter-engine</dependency>
            <dependency>org.ow2.asm:asm-util</dependency>
          </ignoredUnusedDeclaredDependencies>
        </configuration>
        <executions>
          <execution>
            <id>dependency-analyze</id>
            <goals>
              <goal>analyze-only</goal>
            </goals>
            <phase>process-test-classes</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <configuration>
          <fail>true</fail>
          <failFast>false</failFast>
          <rules>
            <banDuplicatePomDependencyVersions/>
            <requireUpperBoundDeps/>
          </rules>
        </configuration>
        <executions>
          <execution>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <configuration>
          <doclint>none</doclint>
          <source>1.8</source>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <doclint>all,-missing</doclint>
              <release>${maven.compiler.release}</release>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <jna.library.path>../target/release</jna.library.path>
            <java.util.logging.config.file>src/test/resources/logging.properties</java.util.logging.config.file>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- Disable strict checks during development -->
      <id>dev</id>
      <activation>
        <property>
          <name>dev</name>
        </property>
      </activation>
      <properties>
        <spotless.check.skip>true</spotless.check.skip>
        <checkstyle.skip>true</checkstyle.skip>
        <enforcer.skip>true</enforcer.skip>
        <maven.compiler.failOnWarning>false</maven.compiler.failOnWarning>
        <maven.dependency.failOnWarning>false</maven.dependency.failOnWarning>
        <maven.javadoc.skip>true</maven.javadoc.skip>
      </properties>
    </profile>

    <profile>
      <!-- Performs the quick build: all plugins deactivated -->
      <id>quick-build</id>
      <activation>
        <property>
          <name>quickly</name>
        </property>
      </activation>
      <properties>
        <spotless.check.skip>true</spotless.check.skip>
        <checkstyle.skip>true</checkstyle.skip>
        <enforcer.skip>true</enforcer.skip>
        <maven.compiler.failOnWarning>false</maven.compiler.failOnWarning>
        <maven.dependency.failOnWarning>false</maven.dependency.failOnWarning>
        <skipITs>true</skipITs>
        <skipTests>true</skipTests>
        <!-- Skip test codegen. -->
        <wasm-test-gen.skip>true</wasm-test-gen.skip>
        <!-- Skip wasi tests codegen -->
        <wasi-test-gen.skip>true</wasi-test-gen.skip>
        <!-- Prevent building broken tests (due to missing codegen). -->
        <maven.test.skip>true</maven.test.skip>
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <mdep.analyze.skip>true</mdep.analyze.skip>
      </properties>
      <build>
        <defaultGoal>clean install</defaultGoal>
        <plugins>
          <!-- disable Error Prone -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <compilerArgs combine.self="override"/>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>java11</id>
      <activation>
        <jdk>11</jdk>
      </activation>
      <build>
        <plugins>
          <!-- disable Error Prone -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <compilerArgs combine.self="override"/>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>release</id>
      <distributionManagement>
        <snapshotRepository>
          <id>ossrh</id>
          <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven-gpg-plugin.version}</version>
            <configuration>
              <gpgArguments>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <goals>
                  <goal>sign</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
