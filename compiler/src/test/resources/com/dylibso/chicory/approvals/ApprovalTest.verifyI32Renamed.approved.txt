public final class FOO implements com/dylibso/chicory/runtime/Machine {

  private final Lcom/dylibso/chicory/runtime/Instance; instance

  public <init>(Lcom/dylibso/chicory/runtime/Instance;)V
    ALOAD 0
    INVOKESPECIAL java/lang/Object.<init> ()V
    ALOAD 0
    ALOAD 1
    PUTFIELD FOO.instance : Lcom/dylibso/chicory/runtime/Instance;
    RETURN

  public call(I[J)[J
    TRYCATCHBLOCK L0 L1 L1 java/lang/StackOverflowError
   L0
    ALOAD 0
    GETFIELD FOO.instance : Lcom/dylibso/chicory/runtime/Instance;
    DUP
    INVOKEVIRTUAL com/dylibso/chicory/runtime/Instance.memory ()Lcom/dylibso/chicory/runtime/Memory;
    ILOAD 1
    ALOAD 2
    INVOKESTATIC FOOMachineCall.call (Lcom/dylibso/chicory/runtime/Instance;Lcom/dylibso/chicory/runtime/Memory;I[J)[J
    ARETURN
   L1
    INVOKESTATIC FOOShaded.throwCallStackExhausted (Ljava/lang/StackOverflowError;)Ljava/lang/RuntimeException;
    ATHROW

  public static call_indirect_0(IILcom/dylibso/chicory/runtime/Memory;Lcom/dylibso/chicory/runtime/Instance;)V
    INVOKESTATIC FOOShaded.checkInterruption ()V
    ALOAD 3
    ILOAD 1
    INVOKEVIRTUAL com/dylibso/chicory/runtime/Instance.table (I)Lcom/dylibso/chicory/runtime/TableInstance;
    ASTORE 4
    ALOAD 4
    ILOAD 0
    INVOKEVIRTUAL com/dylibso/chicory/runtime/TableInstance.requiredRef (I)I
    ISTORE 5
    ALOAD 4
    ILOAD 0
    INVOKEVIRTUAL com/dylibso/chicory/runtime/TableInstance.instance (I)Lcom/dylibso/chicory/runtime/Instance;
    ASTORE 6
    ALOAD 6
    IFNULL L0
    ALOAD 6
    ALOAD 3
    IF_ACMPNE L1
   L0
    ALOAD 2
    ALOAD 3
    ILOAD 5
    LOOKUPSWITCH
      0: L2
      default: L3
   L2
    INVOKESTATIC FOOFuncGroup_0.func_0 (Lcom/dylibso/chicory/runtime/Memory;Lcom/dylibso/chicory/runtime/Instance;)V
    RETURN
   L3
    INVOKESTATIC FOOShaded.throwIndirectCallTypeMismatch ()Ljava/lang/RuntimeException;
    ATHROW
   L1
    ICONST_0
    NEWARRAY T_LONG
    ICONST_0
    ILOAD 5
    ALOAD 6
    INVOKESTATIC FOOShaded.callIndirect ([JIILcom/dylibso/chicory/runtime/Instance;)[J
    RETURN
}
